--- ./ld/ldmain.c	2008-06-02 22:39:40.000000000 -0700
+++ ./ld/ldmain.c	2008-06-02 23:36:15.000000000 -0700
@@ -501,6 +501,89 @@
       if (! bfd_close (output_bfd))
 	einfo (_("%F%B: final close failed: %E\n"), output_bfd);
 
+if (getenv("NESTEDVM_LD_NO_JELF")==NULL)
+if (!strcmp(TARGET, "mips-unknown-elf") || strstr(TARGET, "nestedvm")) {
+	int i, l;
+	FILE *src, *dst;
+	FILE *file_pieces[3];
+	const int bsize = 4096;
+	char *hdrvar, *jarvar, *fn;
+	char *buf = xmalloc (bsize);
+	const char *default_nestedvm_hdr = 
+		"#!/bin/sh\n"
+		"test -z ${NESTEDVM_HDR} \\\n"
+		"|| exec ${NESTEDVM_HDR} \"$@\"\n"
+		"RUT=${NESTEDVM_ROOT:-/}\n"
+		"ELF=\"$0\"\n"
+		"JAR=\"${NESTEDVM_JAR:-$0}\"\n"
+		"JAV=\"${REAL_JAVA:-java}\"\n"
+		"if test -e /cygdrive/c ; then\n"
+		"  RUT=`cygpath -msa \"$RUT\"`\n"
+		"  JAR=`cygpath -msa \"$JAR\"`\n"
+		"  JAV=`cygpath -msa \"$JAV\"`\n"
+		"  ELF=`cygpath -msa \"${ELF%/*}\"`/${ELF##*/}\n"
+		"fi\n"
+		"exec $JAV -Xmx768m -Dnestedvm.root=$RUT -jar \"$JAR\" \"$ELF\" \"$@\"\n"
+		"exit $?\n"
+	;
+	char *bak_name = xmalloc (strlen (output_filename) + 5);
+	strcpy (bak_name, output_filename);
+	strcat (bak_name, ".bak");
+
+	src = fopen (output_filename, FOPEN_RB);
+	dst = fopen (bak_name, FOPEN_WB);
+	if (!src)
+		einfo (_("%X%P: unable to open for source of copy `%s'\n"), output_filename);
+	if (!dst)
+		einfo (_("%X%P: unable to open for destination of copy `%s'\n"), bak_name);
+	while ((l = fread (buf, 1, bsize, src)) > 0)
+		if (l != (int)fwrite (buf, 1, l, dst))
+			einfo (_("%P: Error writing file `%s'\n"), bak_name);
+	fclose (src);
+	if (fclose (dst) == EOF)
+		einfo (_("%P: Error closing file `%s'\n"), bak_name);
+	
+	dst = fopen (output_filename, FOPEN_RUB);
+	if (!dst)
+		einfo (_("%X%P: unable to open for destination of jelf `%s'\n"), output_filename);
+
+	hdrvar = getenv("NESTEDVM_LD_HDR");
+	jarvar = getenv("NESTEDVM_LD_JAR");
+
+	file_pieces[0] = hdrvar ? fopen(hdrvar, FOPEN_RB) : NULL;
+	file_pieces[1] = fopen(bak_name, FOPEN_RB);
+	file_pieces[2] = jarvar ? fopen(jarvar, FOPEN_RB) : NULL;
+
+	for (i = 0, fn = "/"TARGET"/lib/nestedvm.hdr"; i < 3; i+=2, fn = "/"TARGET"/lib/nestedvm.jar") {
+		if (file_pieces[i] == NULL) {
+			char *dir = make_relative_prefix (program_name, BINDIR, TARGET_SYSTEM_ROOT);
+			char *ffn = xmalloc(strlen(dir) + strlen(fn));
+			sprintf(ffn, "%s%s", dir, fn);
+			file_pieces[i] = fopen(ffn, FOPEN_RB);
+			free(ffn);
+			free(dir);
+		}
+	}
+
+	for (i = 0; i < 3; i++) {
+		src = file_pieces[i];
+		if (!src) {
+			if (i == 0)
+				fputs(default_nestedvm_hdr, dst);
+			continue;
+		}
+		while ((l = fread (buf, 1, bsize, src)) > 0)
+			if (l != (int)fwrite (buf, 1, l, dst))
+				einfo (_("%P: Error writing file `%s'\n"), output_filename);
+		fclose (src);
+	}
+	if (fclose (dst) == EOF)
+		einfo (_("%P: Error closing file `%s'\n"), output_filename);
+	unlink (bak_name);
+	free (bak_name);
+	free (buf);
+}
+
       /* If the --force-exe-suffix is enabled, and we're making an
 	 executable file and it doesn't end in .exe, copy it to one
 	 which does.  */
